{"version":3,"sources":["services/weather.tsx","App.tsx","index.tsx"],"names":["getWeatherData","a","axios","get","data","temperatureWrapperStyle","flex","textAlign","temperatureStyle","fontFamily","fontSize","color","temperatureSignStyle","width","locationWrapperStyle","locationStyle","marginTop","descriptionStyle","letterSpacing","paddingLeft","temperatureUnitStyle","alignSelf","App","React","useState","showTemperature","setShowTemperature","actualTemperature","setActualTemperature","country","setCountry","city","setCity","description","setDescription","backgroundStyle","backgroundColor","Math","abs","height","display","alignItems","flexDirection","useEffect","weatherData","temperature","region","weather_descriptions","fetchData","setTimeout","console","log","style","sign","round","ReactDOM","render","document","getElementById"],"mappings":"sMAGaA,EAAc,uCAAG,sBAAAC,EAAA,sEACdC,IAAMC,IAAI,oBADI,uCACiBC,MADjB,2CAAH,qD,OCErBC,EAA0B,CAC9BC,KAAM,IACNC,UAAW,UAGPC,EAAmB,CACvBC,WAAY,sBACZC,SAAU,QACVC,MAAO,SAGHC,EAAuB,CAC3BH,WAAY,sBACZC,SAAU,OACVC,MAAO,QACPE,MAAO,QAGHC,EAAuB,CAC3BR,KAAM,KAGFS,EAAgB,CACpBC,UAAW,OACXP,WAAY,aACZC,SAAU,OACVC,MAAO,SAGHM,EAAmB,CACvBN,MAAO,QACPF,WAAY,sBACZC,SAAU,OACVQ,cAAe,QACfC,YAAa,QAGTC,EAAuB,CAC3BX,WAAY,sBACZC,SAAU,OACVC,MAAO,QACPE,MAAO,OACPQ,UAAW,WA4DEC,EAzDO,WAAO,IAAD,EACoBC,IAAMC,SAAiB,GAD3C,mBACnBC,EADmB,KACFC,EADE,OAEwBH,IAAMC,WAF9B,mBAEnBG,EAFmB,KAEAC,EAFA,OAGIL,IAAMC,WAHV,mBAGnBK,EAHmB,KAGVC,EAHU,OAIFP,IAAMC,WAJJ,mBAInBO,EAJmB,KAIbC,EAJa,OAKYT,IAAMC,WALlB,mBAKnBS,EALmB,KAKNC,EALM,KAOpBC,EAAkB,CACtBC,gBAAgB,OAAD,OAAS,IAAM,GAAIX,GAAiB,EAAEY,KAAKC,IAAI,GAAIb,IAAoB,GAAvE,YAA6E,IAAM,GAAIA,GAAiB,EAAEY,KAAKC,IAAI,GAAIb,KAAqB,EAA5I,YAAiJ,IAAM,GAAIA,GAAiB,EAAEY,KAAKC,IAAI,GAAIb,KAAqB,GAAhN,KACfc,OAAQ,QACR1B,MAAO,QACP2B,QAAS,OACTC,WAAY,SACZC,cAAe,UA2BjB,OAxBAC,qBAAU,YACO,uCAAG,4BAAA1C,EAAA,sEACUD,IADV,OACV4C,EADU,OAEhBhB,EAAqBgB,EAAYC,aACjCf,EAAWc,EAAYf,SACvBG,EAAQY,EAAYE,QACpBZ,EAAeU,EAAYG,qBAAqB,IALhC,2CAAH,qDAOfC,KACC,IAEHL,qBAAU,WACLhB,GAAqBA,GAAqBF,GAC3CwB,YAAW,WACLtB,GAAqB,GAAKF,EAAsC,IAApBE,EAA2BA,GAAuBA,EAAoB,GAAKF,EAAsC,IAApBE,EAA2BA,GACtKD,EAAmBC,GACnBuB,QAAQC,IAAIhB,EAAgBC,kBAE5BV,EAAmBD,EAAsC,IAApBE,KAEtCU,KAAKC,IAAIb,MAEb,CAACE,EAAmBF,IAGrB,sBAAK2B,MAAOjB,EAAZ,UACE,qBAAKiB,MAAOtC,EAAZ,SACE,qBAAIsC,MAAOrC,EAAX,UAA2BgB,EAA3B,KAAmCF,OAErC,sBAAKuB,MAAO/C,EAAZ,UACE,sBAAK+C,MAAO,CAAC,QAAW,OAAQ,eAAkB,SAAU,WAAc,UAA1E,UACE,oBAAIA,MAAOxC,EAAX,SAAkCyB,KAAKgB,KAAK5B,GAAmB,IAAM,MACrE,oBAAI2B,MAAO5C,EAAX,SAA8B6B,KAAKiB,MAAM7B,KACzC,oBAAI2B,MAAOhC,EAAX,sBAEF,oBAAIgC,MAAOnC,EAAX,SAA8BgB,WCjGtCsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9278bfd6.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { WeatherData } from \"../types/types\";\r\n\r\nexport const getWeatherData = async (): Promise<WeatherData> => {\r\n  return (await axios.get('/api/weatherdata')).data;\r\n}","import React, { useEffect } from \"react\";\r\nimport {getWeatherData} from \"./services/weather\";\r\n\r\n\r\n\r\nconst temperatureWrapperStyle = {\r\n  flex: \"3\",\r\n  textAlign: \"center\" as const\r\n}\r\n\r\nconst temperatureStyle = {\r\n  fontFamily: \"Bebas Neue, cursive\",\r\n  fontSize: \"150px\",\r\n  color: \"black\"\r\n};\r\n\r\nconst temperatureSignStyle = {\r\n  fontFamily: \"Bebas Neue, cursive\",\r\n  fontSize: \"80px\",\r\n  color: \"black\",\r\n  width: \"40px\"\r\n}\r\n\r\nconst locationWrapperStyle = {\r\n  flex: \"1\"\r\n}\r\n\r\nconst locationStyle = {\r\n  marginTop: \"10px\",\r\n  fontFamily: \"Montserrat\",\r\n  fontSize: \"20px\",\r\n  color: \"black\",\r\n}\r\n\r\nconst descriptionStyle = {\r\n  color: \"black\",\r\n  fontFamily: \"Bebas Neue, cursive\",\r\n  fontSize: \"30px\",\r\n  letterSpacing: \"0.6px\",\r\n  paddingLeft: \"10px\"\r\n}\r\n\r\nconst temperatureUnitStyle = {\r\n  fontFamily: \"Bebas Neue, cursive\",\r\n  fontSize: \"40px\",\r\n  color: \"black\",\r\n  width: \"40px\",\r\n  alignSelf: \"flexEnd\"\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [showTemperature, setShowTemperature] = React.useState<number>(0);\r\n  const [actualTemperature, setActualTemperature] = React.useState<number>();\r\n  const [country, setCountry] = React.useState<string>();\r\n  const [city, setCity] = React.useState<string>();\r\n  const [description, setDescription] = React.useState<string>();\r\n\r\n  const backgroundStyle = {\r\n    backgroundColor: `rgb(${190 + 0.1*showTemperature/(1+Math.abs(0.1*showTemperature)) * 56},${180 + 0.1*showTemperature/(1+Math.abs(0.1*showTemperature)) * -7},${131 + 0.1*showTemperature/(1+Math.abs(0.1*showTemperature)) * -86})`,\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\" as const\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const weatherData = await getWeatherData();\r\n      setActualTemperature(weatherData.temperature);\r\n      setCountry(weatherData.country);\r\n      setCity(weatherData.region);\r\n      setDescription(weatherData.weather_descriptions[0]);\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(actualTemperature && actualTemperature != showTemperature) {\r\n      setTimeout(() => {\r\n        if((actualTemperature >= 0 && showTemperature + actualTemperature * 0.01 > actualTemperature) || (actualTemperature < 0 && showTemperature + actualTemperature * 0.01 < actualTemperature)) {\r\n          setShowTemperature(actualTemperature);\r\n          console.log(backgroundStyle.backgroundColor);\r\n        } else {\r\n          setShowTemperature(showTemperature + actualTemperature * 0.01);\r\n        }\r\n      }, Math.abs(showTemperature))\r\n    }\r\n  }, [actualTemperature, showTemperature]);\r\n\r\n  return (\r\n    <div style={backgroundStyle}>\r\n      <div style={locationWrapperStyle}>\r\n        <h2 style={locationStyle}>{city}, {country}</h2>\r\n      </div>\r\n      <div style={temperatureWrapperStyle}>\r\n        <div style={{\"display\": \"flex\", \"justifyContent\": \"center\", \"alignItems\": \"center\"}}>\r\n          <h3 style={temperatureSignStyle}>{Math.sign(showTemperature) ? \"+\" : \"-\"}</h3>\r\n          <h1 style={temperatureStyle}>{Math.round(showTemperature)}</h1>\r\n          <h3 style={temperatureUnitStyle}>Â°C</h3>\r\n        </div>\r\n        <h3 style={descriptionStyle}>{description}</h3>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}